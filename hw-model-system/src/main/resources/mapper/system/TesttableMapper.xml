<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suixingpay.hw.system.mapper.TesttableMapper">
    
    <resultMap type="Testtable" id="TesttableResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="age"    column="age"    />
        <result property="sex"    column="sex"    />
        <result property="username"    column="username"    />
        <result property="passwd"    column="passwd"    />
        <result property="classz"    column="classz"    />
    </resultMap>
	
	<sql id="selectTesttableVo">
        select id, name, age, sex, username, passwd, classz from testtable
    </sql>
	
    <select id="selectTesttableList" parameterType="Testtable" resultMap="TesttableResult">
        <include refid="selectTesttableVo"/>
        <where>  
            <if test="id != null "> and id = #{id}</if>
             <if test="name != null "> and name = #{name}</if>
             <if test="age != null  and age != '' "> and age = #{age}</if>
             <if test="sex != null  and sex != '' "> and sex = #{sex}</if>
             <if test="username != null  and username != '' "> and username = #{username}</if>
             <if test="passwd != null  and passwd != '' "> and passwd = #{passwd}</if>
             <if test="classz != null  and classz != '' "> and classz = #{classz}</if>
         </where>
    </select>
    
    <select id="selectTesttableById" parameterType="Integer" resultMap="TesttableResult">
        <include refid="selectTesttableVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertTesttable" parameterType="Testtable" useGeneratedKeys="true" keyProperty="id">
        insert into testtable
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="name != null  ">name,</if>
			<if test="age != null  and age != ''  ">age,</if>
			<if test="sex != null  and sex != ''  ">sex,</if>
			<if test="username != null  and username != ''  ">username,</if>
			<if test="passwd != null  and passwd != ''  ">passwd,</if>
			<if test="classz != null  and classz != ''  ">classz,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="name != null  ">#{name},</if>
			<if test="age != null  and age != ''  ">#{age},</if>
			<if test="sex != null  and sex != ''  ">#{sex},</if>
			<if test="username != null  and username != ''  ">#{username},</if>
			<if test="passwd != null  and passwd != ''  ">#{passwd},</if>
			<if test="classz != null  and classz != ''  ">#{classz},</if>
         </trim>
    </insert>
	 
    <update id="updateTesttable" parameterType="Testtable">
        update testtable
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null  ">name = #{name},</if>
            <if test="age != null  and age != ''  ">age = #{age},</if>
            <if test="sex != null  and sex != ''  ">sex = #{sex},</if>
            <if test="username != null  and username != ''  ">username = #{username},</if>
            <if test="passwd != null  and passwd != ''  ">passwd = #{passwd},</if>
            <if test="classz != null  and classz != ''  ">classz = #{classz},</if>
        </trim>
        where id = #{id}
    </update>

	<delete id="deleteTesttableById" parameterType="Integer">
        delete from testtable where id = #{id}
    </delete>
	
    <delete id="deleteTesttableByIds" parameterType="String">
        delete from testtable where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>